@model TaskProject_Purus.Web.Models.AssignQuoteViewModel
@using GridMvc.Html;
<div class="col-md-12 portfolio-item">
    <h3 class="page-header">List of customers requested for Insurance Quotes </h3>
    <div class="table-responsive">
        <span id="resultMessage"></span>
        @Html.Grid(Model.ListOfQuotes).Columns(columns =>
        {
        columns.Add(c => c.QuoteID).Titled("Quote ID");
        columns.Add(c => c.QuoteTtile).Titled("Quote Title");
        columns.Add(c => c.QuoteDescription).Titled("Quote Description");
        columns.Add().Titled("Assign").Encoded(false).Sanitized(false).SetWidth(30)
        .RenderValueAs(c => @<button class="btn btn-default assignExistingquote"  data-custid="@Model.CustomerId" data-quoteid="@c.QuoteID">Assign</button>);
        }).Sortable(false)

              
    </div>

</div>

<script type="text/javascript">
    $(".assignExistingquote").click(function () {
        var customerId = $(this).data('custid');
        console.log(customerId);
     
        var quoteId = $(this).data('quoteid');
        console.log(quoteId);
        $.ajax({
            async: false,
            type: 'POST',
            data:{customerId:customerId,quoteId:quoteId},
            url: '/AdminSection/AssignExistingQuote',
            success: function (data) {                
                $("#dialog-modal2").dialog("close");
            },
            failure: function (data) {
                $("#resultMessage").html(data.msg);
            }
        });

       
    });

    </script>